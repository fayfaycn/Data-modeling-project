<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Excel File)' inline='true' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel File' name='excel-direct.1nmywj10qr55m313m4dws1pblj6c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/faith/Downloads/Excel File.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1nmywj10qr55m313m4dws1pblj6c' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hihn Sale States' datatype='boolean' name='[Calculation_2171297999156330499]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM(Sales)&gt; 40000' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_26CBA03BA2A94F00A89BBEF63D19D2BA]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_2171297999156330499' />
        <field-sort-custom-order field='Calculation_2171297999156166658' />
        <field-sort-custom-order field='Calculation_2171297999155777536' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <filter class='categorical' column='[Country]' filter-group='2'>
        <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[State]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[State]' member='&quot;&apos;Ajman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;&apos;Amman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;&apos;Asir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Abia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Abruzzi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Abuja Capital Territory&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aceh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Acre&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ad Dawhah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adamaoua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adamawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adiyaman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Afyonkarahisar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aichi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aksaray&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Akwa Ibom&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Bahr Al Ahmar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Basrah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Buhayrah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Fayyum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Gharbiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Hudaydah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Iskandariyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Jawf&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Madinah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Marqab&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Minufiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Minya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Qadisiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Qahirah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alagoas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alberta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alger&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alibori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Almaty&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Almaty City&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alsace&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amapá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amasya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amazonas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Analamanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anambra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ancash&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Andalusía&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Andhra Pradesh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Andijan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anhui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ankara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Annaba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anseba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antalya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antioquia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antofagasta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antwerp&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anzoátegui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aomori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Apulia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aqmola&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aquitaine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ar Raqqah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ar Riyad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aragua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arauca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arbil&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ardabil&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ardahan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arequipa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arges&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arica y Parinacota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arkhangel&apos;sk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Artemisa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Artibonite&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arusha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ash Sharqiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ashanti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ashgabat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Assam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Astana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Astrakhan&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Asturias&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Asunción&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aswan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Asyut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atacama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atakora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atlántico&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atlántida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atlantique&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atsimo-Andrefana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atsinanana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Auckland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Australian Capital Territory&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Auvergne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aveiro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ayacucho&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aydin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Azuay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Babil&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bacau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baden-Württemberg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baghdad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bahia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baja California&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baja California Sur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Balearic Islands&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bali&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Balikesir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Balti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baluchistan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bamako&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Banaadir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bandundu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Banghazi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bangkok&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bangui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bani Suwayf&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Banská Bystrica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Barahona&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bas-Congo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Basel-Stadt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bashkortostan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Basilicata&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Basque Country&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Batman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Batna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bauchi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bavaria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bay of Plenty&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bechar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Beijing&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Beirut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bejaia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bekes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Belgorod&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bengkulu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Benguela&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Beni&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Benue&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Berlin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bihar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bihor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bingol&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Biobio&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bishkek&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bissau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bistrita-Nasaud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bitola&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Boeny&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bogota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bolivar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bolívar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bolu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Borgou&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Borno&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Botosani&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Boyacá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Braga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Braila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brandenburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brasov&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bremen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;British Columbia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brittany&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brussels&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bryansk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Budapest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Buenos Aires&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bujumbura-Mairie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bulawayo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bur Sa&apos;id&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Burgas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Burgundy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bursa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Busan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bushehr&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Buskerud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Buzau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cabo Delgado&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cajamarca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Calabarzon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Calabria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Caldas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Callao&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Camagüey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Campania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Campeche&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Canakkale&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Canelones&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cantabria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Canterbury&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Caquetá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Carabobo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Caras-Severin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Carinthia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Casanare&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Castile and León&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Castile-La Mancha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Catalonia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Catamarca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ceará&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central Equatoria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central Jutland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central Luzon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Centrale&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Centre&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cesar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ceuta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chaco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chaguanas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Champagne-Ardenne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chandigarh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chaouia-Ouardigha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chelyabinsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cherkasy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chernihiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chhattisgarh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chiapas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chiba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chihuahua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chimaltenango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chinandega&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chiriquí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chisinau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chittagong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chocó&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Choluteca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chongqing&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chubut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chuquisaca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cidade De Maputo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ciego de Ávila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cienfuegos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cluj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Coahuila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Coast&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cochabamba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Coimbra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cojedes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Colima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Colón&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Constanta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Constantine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Copperbelt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cordillera&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Córdoba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cork&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Corrientes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Corsica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cortés&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Corum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cross River&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cundinamarca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cuscatlán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dà Nang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Daegu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Daejeon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dagestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dakar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dar Es Salaam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dayr Az Zawr&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Delhi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Delta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Denizli&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dhaka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dhi Qar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diffa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dire Dawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Distrito Capital&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Distrito Federal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dix-Huit Montagnes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diyala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diyarbakir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Djelfa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Djibouti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dnipropetrovs&apos;k&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dolj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Donetsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Donga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Doukkala-Abda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Drenthe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Duarte&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dublin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Durango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Durrës&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Düzce&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;East Flanders&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Eastern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Eastern Cape&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ebonyi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Edirne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Edo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Elazig&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Elbasan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Emilia-Romagna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;England&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Entre Ríos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Enugu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Equateur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Erzurum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Escuintla&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Esfahan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Eskisehir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Espaillat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Espírito Santo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Est&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Estelí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Estuaire&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Extremadura&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Extreme-Nord&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;F.C.T.&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fars&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Federal District&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Federation of Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fès-Boulemane&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Finland Proper&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Flemish Brabant&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Franche-Comté&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Francisco Morazán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Free State&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Friesland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Friuli-Venezia Giulia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fromager&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fujian&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fukui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fukuoka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Galati&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Galicia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Galway&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gangwon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gansu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gauteng&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gaziantep&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gelderland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Geneva&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gezira&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gharb-Chrarda-Béni Hssen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gilan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gisborne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Giurgiu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Goiás&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Golestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gombe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gorj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Grad Zagreb&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Granada&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Grand Casablanca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Grand Gedeh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Granma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Greater Accra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Greater Poland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Groningen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guadeloupe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guanajuato&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guangdong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guangxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guantánamo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guárico&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guayas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guelma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guelmim-Es Semara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guerrero&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guizhou&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gujarat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gulu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gunma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gyeonggi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gyeongsangnam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gyor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haifa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hainan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hainaut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hajdu-Bihar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Halland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hamadan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hamburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Harare&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Harjumaa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haryana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hatay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haut-Sassandra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haute-Matsiatra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hawke&apos;s Bay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hebei&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hedmark&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Heilongjiang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Henan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hesse&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hidalgo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hims&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hirat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hiroshima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ho Chí Minh City&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hokkaido&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Holguín&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Homyel&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hong Kong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hordaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hormozgan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hovedstaden&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hradec Kralove&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hrodna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Huambo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hubei&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Huehuetenango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Huila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hunan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hunedoara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hyogo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Iasi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;iauliai&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ibaraki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ibb&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Igdir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ilam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ile-de-France&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;ilina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Imereti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Imo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Inhambane&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Inner Mongolia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Irbid&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Iringa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Irkutsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ishikawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Isla de la Juventud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Isparta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Istanbul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ivano-Frankivsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ivanovo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Izmir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jakarta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jalisco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jambi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jammu and Kashmir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jawa Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jawa Tengah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jawa Timur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jeju&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jerusalem&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jharkhand&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jiangsu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jiangxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jilin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jinja&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jizan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jizzakh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jubbada Hoose&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jujuy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Junín&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kabardino-Balkariya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kabarole&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kabul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaduna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kafr Ash Shaykh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kagawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kahramanmaras&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kalimantan Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kalimantan Selatan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kalimantan Timur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaliningrad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaluga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kampala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kanagawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kandahar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kankan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kano&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Karaman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Karbala&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Karnataka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kars&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kasai-Occidental&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kasai-Oriental&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kassala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kastamonu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Katanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Katsina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaunas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kayes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kayseri&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kerala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kerman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kermanshah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khánh Hòa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kharkiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khartoum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khatlon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kherson&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khmel&apos;nyts&apos;kyy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khomas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khorezm&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khulna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khuzestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khyber Pakhtunkhwa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kiên Giang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kigali&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kigoma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kilimanjaro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kilis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kindia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kinshasa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kirovohrad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kirsehir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Klaipeda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kocaeli&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Konya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Korçë&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kordestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kuala Lumpur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kumanovo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kutahya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kwara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kwazulu-natal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kymenlaakso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;L&apos;viv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Libertad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Pampa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Paz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Rioja&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Romana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Vega&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lacs&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Laghouat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lagos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lagunes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lambayeque&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Languedoc-Roussillon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Las Tunas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lazio&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lebap&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;León&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lesser Poland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liaoning&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liberec&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liège&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liguria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lima (city)&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Limburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Limousin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Limpopo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lisboa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Litoral&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Littoral&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ljubljana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lodz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lombardy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lorestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Loreto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lorraine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Los Lagos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Los Rios&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lower Normandy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lower Saxony&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Luanda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lublin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lubusz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lucerne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Luhans&apos;k&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lusaka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Madhya Pradesh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Madrid&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Magallanes y Antártica Chilena&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Magdalena&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maharashtra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Makkah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Malanje&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Malatya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maluku&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manabi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Managua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manawatu-Wanganui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mandoul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manicaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maniema&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manipur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manisa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manitoba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manzini&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maputo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maradi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maramures&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maranhão&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Marche&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mardin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maritime&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Markazi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Marlborough&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Marrakech-Tensift-El Haouz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Martinique&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mary&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maryland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Masaya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maseru&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mashonaland West&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Masovia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Massachusetts&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matabeleland North&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matagalpa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matanzas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mato Grosso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mato Grosso do Sul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matruh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mayabeque&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maysan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mazandaran&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mbeya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mecklenburg-Vorpommern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Medea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mehedinti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Meknès-Tafilalet&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Melilla&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mendoza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mérida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mersin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Meta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;México&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Michoacán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Midi-Pyrénées&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Minas Gerais&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Miranda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Misiones&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Misratah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Monagas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mono&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Monseñor Nouel&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Montevideo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Montserrado&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mopti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Moquegua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Moravian-Silesian&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Morelos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Morogoro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Moscow&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mostaganem&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mpumalanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mtwara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Muharraq&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Murcia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mures&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mwanza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mykolayiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nagano&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nagasaki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nairobi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nakhon Ratchasima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Namangan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Namibe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nampula&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Namur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nangarhar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nariño&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;National Capital&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Navarra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nayarit&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Neamt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Negeri Sembilan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nelson&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Neuquén&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nevsehir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New South Wales&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Newfoundland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niamey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niari&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niassa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nigde&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niger&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ninawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ningxia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nitra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nord&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nord-Ouest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nord-Pas-de-Calais&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Norte de Santander&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Brabant&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Holland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Lebanon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Rhine-Westphalia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North-West&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northern Mindanao&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northern Territory&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nouakchott&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nova Scotia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Novgorod&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Novosibirsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nueva Esparta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nuevo León&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nusa Tenggara Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nusa Tenggara Timur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nyanza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nzérékoré&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;O&apos;Higgins&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oaxaca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Odisha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ogun&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oita&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Okayama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Olomouc&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ondo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ontario&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Opole&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oran&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ordu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Orientale&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oruro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osaka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osjecko-Baranjska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oslo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osmaniye&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osun&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Otago&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ouémé&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ouest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Overijssel&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oyo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pahang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Panama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Panevezys&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Papua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pará&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Paraíba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Parana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pavlodar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pays de la Loire&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Paysandú&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pazardzhik&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Perak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Peravia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pernambuco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pernik&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Phnom Penh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Piauí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Picardy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pichincha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Piedmont&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pinar del Río&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Piura&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plateau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plateaux&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pleven&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plovdiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plzen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Podgorica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Podlaskie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Poitou-Charentes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Poltava&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pomerania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Porto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Portuguesa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Potosí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Prague&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Prahova&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Primorsko-Goranska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Provence-Alpes-Côte d&apos;Azur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Provincia de Buenos Aires&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Puducherry&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Puebla&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Punjab&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Puno&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pwani&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qaraghandy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qashqadaryo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qazvin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qinghai&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qom&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qostanay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quebec&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Queensland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Querétaro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quezaltenango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quindío&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quintana Roo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ra&apos;s Al Khaymah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rabat-Salé-Zemmour-Zaer&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rajasthan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rajshahi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Razavi Khorasan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Red Sea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rhineland-Palatinate&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rhône-Alpes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Riau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rift Valley&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rio de Janeiro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rio Grande do Norte&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rio Grande do Sul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Río Negro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Risaralda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rivera&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rivers&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rivne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rize&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rogaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rondônia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Roraima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ruvuma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saarland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sabah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saint Catherine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saint Michael&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saint-Louis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saitama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Salah Ad Din&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Salta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Salzburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Samsun&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Cristóbal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Fernando&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Juan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Luis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Luis Potosí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Pedro de Macorís&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Salvador&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sancti Spíritus&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sanliurfa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Ana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Catarina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Cruz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Fe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santander&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santiago&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santiago de Cuba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santiago del Estero&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santo Domingo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;São Paulo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sarawak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sardinia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saskatchewan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Satu Mare&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Savanes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saxony&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saxony-Anhalt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Schleswig-Holstein&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Scotland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Selangor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Semnan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Seoul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sergipe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Setúbal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sevastopol&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shaanxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shandong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shanghai&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shanxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shinyanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shizuoka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shkodër&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shumen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sibiu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sichuan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sicily&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sidi Bel Abbes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Siirt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sikasso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Silesia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sinaloa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sindh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sirnak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sistan Va Baluchestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sivas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Skåne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Skikda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sliven&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Södermanland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sofala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sofiya-Grad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sokoto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sonora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sonsonate&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Souss-Massa-Draâ&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Australia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Chungcheong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Dakota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Denmark&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Dublin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Holland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Khorasan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Kivu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Southern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Southland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Splitsko-Dalmatinska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;St. Gallen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Stara Zagora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Stavropol&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Stockholm&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Styria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Suceava&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sucre&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sud-Ouest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Suhaj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sulawesi Tengah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sulawesi Tenggara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sulawesi Utara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumatera Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumatera Selatan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumatera Utara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Surxondaryo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sylhet&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;T?nh C?n Th?&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ta&apos;izz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tabasco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tabora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tabuk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Táchira&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tadla-Azilal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Taipei City&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tamaulipas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tambov&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tamil Nadu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tanger-Tétouan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Taranaki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tarapacá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tarija&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tartumaa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tasmania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Taza-Al Hoceima-Taounate&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tbilisi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tehran&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tekirdag&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tel Aviv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Telangana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ternopil&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tete&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Th? Dô Hà N?i&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Thies&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Thuringia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tianjin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Timis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tipaza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tizi Ouzou&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tlemcen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tocantins&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tochigi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tokat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tokyo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tolima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tottori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Trabzon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Trengganu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Trentino-Alto Adige&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tripura&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tunis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tuscany&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tyrol&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ucayali&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ulaanbaatar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ulsan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Umbria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Upper Austria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Upper Normandy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uppsala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Usak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Usti nad Labem&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Utrecht&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uttar Pradesh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uttarakhand&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uusimaa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valcea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valenciana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valle del Cauca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vallee Du Bandama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valparaíso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Van&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vargas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Värmland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Varna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Västra Götaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vaud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Veneto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Veracruz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vest-Agder&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Victoria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vienna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Villa Clara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vilnius&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vinnytsya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vitsyebsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vladimir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vlorë&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Volyn&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Voronezh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vrancea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vratsa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Waikato&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wales&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wellington&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;West Bengal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;West Flanders&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;West Virginia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western Australia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western Cape&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western Visayas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;White Nile&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wisconsin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Woqooyi Galbeed&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wyoming&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Xinjiang Uygur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yalova&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yamaguchi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yambol&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yangon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yaracuy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yaroslavl&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yazd&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yevrey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yobe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yogyakarta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yoro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yucatán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yunnan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zacatecas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zagrebacka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zambezia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zamfara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zanjan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zaporizhzhya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zealand&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zeeland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zhambyl&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zhejiang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zhytomyr&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ziguinchor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zinder&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zulia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zürich&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_26CBA03BA2A94F00A89BBEF63D19D2BA'>
            <properties context=''>
              <relation connection='excel-direct.1nmywj10qr55m313m4dws1pblj6c' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Profits in USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
          </datasources>
          <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[cnt:Quantity:qk]' included-values='in-range'>
            <min>1</min>
            <max>2001</max>
          </filter>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</column>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[cnt:Quantity:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Profit:qk]' />
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Quantity:qk]' />
              <color column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C6A19382-4EDA-49D4-B470-2886F23AE03A}' />
    </worksheet>
    <worksheet name='Sales Trend in USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
          </datasources>
          <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' included-values='in-range'>
            <min>40000.0</min>
          </filter>
          <slices>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</column>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' />
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' />
              <lod column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]</rows>
        <cols>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B294310D-28E3-4048-BDA7-A95CCA2AC95A}' />
    </worksheet>
    <worksheet name='Sales in United State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</column>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' />
              <lod column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
              <color column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
              <geometry column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk] * [federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[Latitude (generated)])</rows>
        <cols>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{731C9924-4EE0-4941-A4A3-6AAF875D5895}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sales in United State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{909A45E2-A502-482D-AD27-7F92C178F30E}' />
    </window>
    <window class='worksheet' name='Profits in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Shipping Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{466243EF-BCEF-44B1-B274-E9D7014F1DB4}' />
    </window>
    <window class='worksheet' maximized='true' name='Sales Trend in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Category:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Order Date:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C384C5BF-F9B3-4318-8840-910CB8792138}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Profits in USA' width='192'>
      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
      2nfDck5X69YncAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales Trend in USA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales in United State' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
