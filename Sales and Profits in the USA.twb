<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Excel File)' inline='true' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel File' name='excel-direct.1nmywj10qr55m313m4dws1pblj6c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/faith/Downloads/Excel File.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1nmywj10qr55m313m4dws1pblj6c' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
            <column datatype='string' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hihn Sale States' datatype='boolean' name='[Calculation_2171297999156330499]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM(Sales)&gt; 40000' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_26CBA03BA2A94F00A89BBEF63D19D2BA]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_2171297999156330499' />
        <field-sort-custom-order field='Calculation_2171297999156166658' />
        <field-sort-custom-order field='Calculation_2171297999155777536' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <filter class='categorical' column='[Country]' filter-group='2'>
        <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[State]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[State]' member='&quot;&apos;Ajman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;&apos;Amman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;&apos;Asir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Abia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Abruzzi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Abuja Capital Territory&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aceh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Acre&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ad Dawhah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adamaoua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adamawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Adiyaman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Afyonkarahisar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aichi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aksaray&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Akwa Ibom&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Bahr Al Ahmar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Basrah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Buhayrah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Fayyum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Gharbiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Hudaydah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Iskandariyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Jawf&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Madinah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Marqab&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Minufiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Minya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Qadisiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Al Qahirah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alagoas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alberta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alger&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alibori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Almaty&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Almaty City&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Alsace&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amapá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amasya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amazonas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Amur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Analamanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anambra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ancash&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Andalusía&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Andhra Pradesh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Andijan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anhui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ankara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Annaba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anseba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antalya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antioquia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antofagasta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Antwerp&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Anzoátegui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aomori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Apulia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aqmola&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aquitaine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ar Raqqah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ar Riyad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aragua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arauca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arbil&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ardabil&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ardahan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arequipa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arges&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arica y Parinacota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arkhangel&apos;sk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Artemisa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Artibonite&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Arusha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ash Sharqiyah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ashanti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ashgabat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Assam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Astana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Astrakhan&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Asturias&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Asunción&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aswan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Asyut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atacama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atakora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atlántico&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atlántida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atlantique&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atsimo-Andrefana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Atsinanana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Auckland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Australian Capital Territory&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Auvergne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aveiro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ayacucho&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Aydin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Azuay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Babil&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bacau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baden-Württemberg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baghdad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bahia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baja California&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baja California Sur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Balearic Islands&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bali&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Balikesir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Balti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Baluchistan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bamako&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Banaadir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bandundu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Banghazi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bangkok&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bangui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bani Suwayf&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Banská Bystrica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Barahona&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bas-Congo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Basel-Stadt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bashkortostan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Basilicata&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Basque Country&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Batman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Batna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bauchi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bavaria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bay of Plenty&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bechar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Beijing&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Beirut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bejaia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bekes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Belgorod&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bengkulu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Benguela&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Beni&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Benue&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Berlin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bihar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bihor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bingol&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Biobio&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bishkek&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bissau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bistrita-Nasaud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bitola&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Boeny&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bogota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bolivar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bolívar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bolu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Borgou&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Borno&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Botosani&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Boyacá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Braga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Braila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brandenburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brasov&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bremen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;British Columbia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brittany&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Brussels&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bryansk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Budapest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Buenos Aires&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bujumbura-Mairie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bulawayo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bur Sa&apos;id&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Burgas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Burgundy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bursa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Busan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Bushehr&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Buskerud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Buzau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cabo Delgado&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cajamarca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Calabarzon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Calabria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Caldas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Callao&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Camagüey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Campania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Campeche&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Canakkale&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Canelones&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cantabria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Canterbury&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Caquetá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Carabobo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Caras-Severin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Carinthia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Casanare&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Castile and León&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Castile-La Mancha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Catalonia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Catamarca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ceará&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central Equatoria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central Jutland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Central Luzon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Centrale&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Centre&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cesar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ceuta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chaco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chaguanas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Champagne-Ardenne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chandigarh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chaouia-Ouardigha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chelyabinsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cherkasy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chernihiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chhattisgarh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chiapas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chiba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chihuahua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chimaltenango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chinandega&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chiriquí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chisinau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chittagong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chocó&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Choluteca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chongqing&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chubut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Chuquisaca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cidade De Maputo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ciego de Ávila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cienfuegos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cluj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Coahuila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Coast&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cochabamba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Coimbra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cojedes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Colima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Colón&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Constanta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Constantine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Copperbelt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cordillera&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Córdoba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cork&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Corrientes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Corsica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cortés&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Corum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cross River&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cundinamarca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Cuscatlán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dà Nang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Daegu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Daejeon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dagestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dakar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dar Es Salaam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dayr Az Zawr&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Delhi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Delta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Denizli&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dhaka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dhi Qar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diffa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dire Dawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;District of Columbia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Distrito Capital&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Distrito Federal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dix-Huit Montagnes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diyala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Diyarbakir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Djelfa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Djibouti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dnipropetrovs&apos;k&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dolj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Donetsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Donga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Doukkala-Abda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Drenthe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Duarte&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Dublin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Durango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Durrës&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Düzce&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;East Flanders&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Eastern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Eastern Cape&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ebonyi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Edirne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Edo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Elazig&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Elbasan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Emilia-Romagna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;England&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Entre Ríos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Enugu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Equateur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Erzurum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Escuintla&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Esfahan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Eskisehir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Espaillat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Espírito Santo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Est&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Estelí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Estuaire&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Extremadura&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Extreme-Nord&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;F.C.T.&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fars&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Federal District&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Federation of Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fès-Boulemane&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Finland Proper&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Flemish Brabant&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Franche-Comté&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Francisco Morazán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Free State&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Friesland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Friuli-Venezia Giulia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fromager&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fujian&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fukui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Fukuoka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Galati&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Galicia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Galway&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gangwon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gansu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gauteng&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gaziantep&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gelderland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Geneva&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gezira&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gharb-Chrarda-Béni Hssen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gilan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gisborne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Giurgiu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Goiás&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Golestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gombe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gorj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Grad Zagreb&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Granada&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Grand Casablanca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Grand Gedeh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Granma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Greater Accra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Greater Poland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Groningen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guadeloupe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guanajuato&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guangdong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guangxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guantánamo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guárico&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guayas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guelma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guelmim-Es Semara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guerrero&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Guizhou&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gujarat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gulu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gunma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gyeonggi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gyeongsangnam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Gyor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haifa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hainan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hainaut&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hajdu-Bihar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Halland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hamadan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hamburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Harare&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Harjumaa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haryana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hatay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haut-Sassandra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Haute-Matsiatra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hawke&apos;s Bay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hebei&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hedmark&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Heilongjiang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Henan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hesse&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hidalgo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hims&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hirat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hiroshima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ho Chí Minh City&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hokkaido&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Holguín&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Homyel&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hong Kong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hordaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hormozgan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hovedstaden&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hradec Kralove&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hrodna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Huambo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hubei&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Huehuetenango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Huila&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hunan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hunedoara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Hyogo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Iasi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;iauliai&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ibaraki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ibb&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Igdir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ilam&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ile-de-France&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;ilina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Imereti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Imo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Inhambane&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Inner Mongolia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Irbid&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Iringa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Irkutsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ishikawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Isla de la Juventud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Isparta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Istanbul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ivano-Frankivsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ivanovo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Izmir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jakarta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jalisco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jambi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jammu and Kashmir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jawa Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jawa Tengah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jawa Timur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jeju&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jerusalem&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jharkhand&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jiangsu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jiangxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jilin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jinja&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jizan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jizzakh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jubbada Hoose&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Jujuy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Junín&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kabardino-Balkariya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kabarole&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kabul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaduna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kafr Ash Shaykh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kagawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kahramanmaras&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kalimantan Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kalimantan Selatan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kalimantan Timur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaliningrad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaluga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kampala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kanagawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kandahar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kankan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kano&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Karaman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Karbala&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Karnataka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kars&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kasai-Occidental&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kasai-Oriental&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kassala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kastamonu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Katanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Katsina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kaunas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kayes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kayseri&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kerala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kerman&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kermanshah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khánh Hòa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kharkiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khartoum&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khatlon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kherson&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khmel&apos;nyts&apos;kyy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khomas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khorezm&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khulna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khuzestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Khyber Pakhtunkhwa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kiên Giang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kigali&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kigoma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kilimanjaro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kilis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kindia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kinshasa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kirovohrad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kirsehir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Klaipeda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kocaeli&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Konya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Korçë&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kordestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kuala Lumpur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kumanovo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kutahya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kwara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kwazulu-natal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Kymenlaakso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;L&apos;viv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Libertad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Pampa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Paz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Rioja&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Romana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;La Vega&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lacs&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Laghouat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lagos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lagunes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lambayeque&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Languedoc-Roussillon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Las Tunas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lazio&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lebap&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;León&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lesser Poland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liaoning&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liberec&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liège&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Liguria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lima (city)&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Limburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Limousin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Limpopo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lisboa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Litoral&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Littoral&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ljubljana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lodz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lombardy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lorestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Loreto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lorraine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Los Lagos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Los Rios&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lower Normandy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lower Saxony&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Luanda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lublin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lubusz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lucerne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Luhans&apos;k&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Lusaka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Madhya Pradesh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Madrid&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Magallanes y Antártica Chilena&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Magdalena&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maharashtra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Makkah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Malanje&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Malatya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maluku&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manabi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Managua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manawatu-Wanganui&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mandoul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manicaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maniema&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manipur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manisa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manitoba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Manzini&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maputo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maradi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maramures&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maranhão&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Marche&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mardin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maritime&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Markazi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Marlborough&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Marrakech-Tensift-El Haouz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Martinique&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mary&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maryland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Masaya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maseru&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mashonaland West&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Masovia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Massachusetts&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matabeleland North&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matagalpa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matanzas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mato Grosso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mato Grosso do Sul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Matruh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mayabeque&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Maysan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mazandaran&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mbeya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mecklenburg-Vorpommern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Medea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mehedinti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Meknès-Tafilalet&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Melilla&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mendoza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mérida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mersin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Meta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;México&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Michoacán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Midi-Pyrénées&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Minas Gerais&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Miranda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Misiones&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Misratah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Monagas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mono&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Monseñor Nouel&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Montevideo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Montserrado&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mopti&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Moquegua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Moravian-Silesian&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Morelos&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Morogoro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Moscow&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mostaganem&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mpumalanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mtwara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Muharraq&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Murcia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mures&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mwanza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Mykolayiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nagano&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nagasaki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nairobi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nakhon Ratchasima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Namangan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Namibe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nampula&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Namur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nangarhar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nariño&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;National Capital&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Navarra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nayarit&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Neamt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Negeri Sembilan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nelson&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Neuquén&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nevsehir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New South Wales&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Newfoundland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niamey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niari&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niassa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nigde&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Niger&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ninawa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ningxia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nitra&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nord&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nord-Ouest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nord-Pas-de-Calais&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Norte de Santander&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Brabant&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Holland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Lebanon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North Rhine-Westphalia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;North-West&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northern Mindanao&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northern Territory&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Northland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nouakchott&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nova Scotia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Novgorod&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Novosibirsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nueva Esparta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nuevo León&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nusa Tenggara Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nusa Tenggara Timur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nyanza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Nzérékoré&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;O&apos;Higgins&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oaxaca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Odisha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ogun&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oita&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Okayama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Olomouc&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ondo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ontario&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Opole&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oran&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ordu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Orientale&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oruro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osaka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osjecko-Baranjska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oslo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osmaniye&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Osun&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Otago&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ouémé&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ouest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Overijssel&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Oyo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pahang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Panama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Panevezys&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Papua&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pará&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Paraíba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Parana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pavlodar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pays de la Loire&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Paysandú&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pazardzhik&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Perak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Peravia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pernambuco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pernik&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Phnom Penh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Piauí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Picardy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pichincha&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Piedmont&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pinar del Río&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Piura&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plateau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plateaux&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pleven&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plovdiv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Plzen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Podgorica&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Podlaskie&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Poitou-Charentes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Poltava&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pomerania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Porto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Portuguesa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Potosí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Prague&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Prahova&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Primorsko-Goranska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Provence-Alpes-Côte d&apos;Azur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Provincia de Buenos Aires&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Puducherry&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Puebla&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Punjab&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Puno&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Pwani&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qaraghandy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qashqadaryo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qazvin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qinghai&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qom&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Qostanay&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quebec&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Queensland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Querétaro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quezaltenango&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quindío&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Quintana Roo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ra&apos;s Al Khaymah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rabat-Salé-Zemmour-Zaer&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rajasthan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rajshahi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Razavi Khorasan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Red Sea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rhineland-Palatinate&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rhône-Alpes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Riau&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rift Valley&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rio de Janeiro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rio Grande do Norte&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rio Grande do Sul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Río Negro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Risaralda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rivera&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rivers&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rivne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rize&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rogaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Rondônia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Roraima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ruvuma&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saarland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sabah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saida&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saint Catherine&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saint Michael&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saint-Louis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saitama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Salah Ad Din&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Salta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Salzburg&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Samsun&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Cristóbal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Fernando&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Juan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Luis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Luis Potosí&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Pedro de Macorís&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;San Salvador&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sancti Spíritus&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sanliurfa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Ana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Catarina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Cruz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santa Fe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santander&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santiago&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santiago de Cuba&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santiago del Estero&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Santo Domingo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;São Paulo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sarawak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sardinia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saskatchewan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Satu Mare&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Savanes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saxony&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Saxony-Anhalt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Schleswig-Holstein&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Scotland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Selangor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Semnan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Seoul&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sergipe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Setúbal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sevastopol&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shaanxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shandong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shanghai&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shanxi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shinyanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shizuoka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shkodër&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Shumen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sibiu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sichuan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sicily&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sidi Bel Abbes&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Siirt&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sikasso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Silesia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sinaloa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sindh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sirnak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sistan Va Baluchestan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sivas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Skåne&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Skikda&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sliven&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Södermanland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sofala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sofiya-Grad&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sokoto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sonora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sonsonate&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Souss-Massa-Draâ&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Australia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Chungcheong&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Dakota&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Denmark&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Dublin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Holland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Khorasan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;South Kivu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Southern&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Southland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Splitsko-Dalmatinska&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;St. Gallen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Stara Zagora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Stavropol&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Stockholm&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Styria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Suceava&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sucre&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sud-Ouest&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Suhaj&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sulawesi Tengah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sulawesi Tenggara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sulawesi Utara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumatera Barat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumatera Selatan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumatera Utara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sumy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Surxondaryo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Sylhet&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;T?nh C?n Th?&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ta&apos;izz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tabasco&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tabora&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tabuk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Táchira&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tadla-Azilal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Taipei City&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tamaulipas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tambov&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tamil Nadu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tanga&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tanger-Tétouan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Taranaki&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tarapacá&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tarija&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tartumaa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tasmania&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Taza-Al Hoceima-Taounate&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tbilisi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tehran&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tekirdag&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tel Aviv&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Telangana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ternopil&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tete&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Th? Dô Hà N?i&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Thies&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Thuringia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tianjin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Timis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tipaza&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tizi Ouzou&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tlemcen&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tocantins&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tochigi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tokat&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tokyo&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tolima&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tottori&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Trabzon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Trengganu&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Trentino-Alto Adige&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tripura&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tunis&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tuscany&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Tyrol&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ucayali&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ulaanbaatar&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ulsan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Umbria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Upper Austria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Upper Normandy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uppsala&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Usak&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Usti nad Labem&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Utrecht&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uttar Pradesh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uttarakhand&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Uusimaa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valcea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valenciana&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valle del Cauca&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vallee Du Bandama&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Valparaíso&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Van&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vargas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Värmland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Varna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Västra Götaland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vaud&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Veneto&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Veracruz&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vest-Agder&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Victoria&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vienna&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Villa Clara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vilnius&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vinnytsya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vitsyebsk&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vladimir&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vlorë&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Volyn&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Voronezh&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vrancea&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Vratsa&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Waikato&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wales&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wellington&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;West Bengal&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;West Flanders&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;West Virginia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western Australia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western Cape&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Western Visayas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;White Nile&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wisconsin&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Woqooyi Galbeed&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Wyoming&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Xinjiang Uygur&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yalova&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yamaguchi&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yambol&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yangon&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yaracuy&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yaroslavl&apos;&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yazd&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yevrey&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yobe&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yogyakarta&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yoro&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yucatán&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Yunnan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zacatecas&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zagrebacka&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zambezia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zamfara&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zanjan&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zaporizhzhya&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zealand&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zeeland&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zhambyl&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zhejiang&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zhytomyr&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Ziguinchor&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zinder&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zulia&quot;' />
          <groupfilter function='member' level='[State]' member='&quot;Zürich&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_26CBA03BA2A94F00A89BBEF63D19D2BA'>
            <properties context=''>
              <relation connection='excel-direct.1nmywj10qr55m313m4dws1pblj6c' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20241224T214047' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20241224T214047' name='Clipboard_20241224T214047leaf'>
            <connection class='textscan' directory='C:/Users/faith/OneDrive/Documents/My Tableau Repository/Datasources' filename='Clipboard_20241224T214047.txt' />
          </named-connection>
        </named-connections>
        <relation connection='Clipboard_20241224T214047leaf' name='Clipboard_20241224T214047#txt' table='[Clipboard_20241224T214047#txt]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Clipboard_20241224T214047' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20241224T214047]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Clipboard_20241224T214047' id='Clipboard_20241224T214047'>
            <properties context=''>
              <relation connection='Clipboard_20241224T214047leaf' name='Clipboard_20241224T214047#txt' table='[Clipboard_20241224T214047#txt]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20241224T214110' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20241224T214110' name='Clipboard_20241224T214110leaf'>
            <connection class='textscan' directory='C:/Users/faith/OneDrive/Documents/My Tableau Repository/Datasources' filename='Clipboard_20241224T214110.txt' />
          </named-connection>
        </named-connections>
        <relation connection='Clipboard_20241224T214110leaf' name='Clipboard_20241224T214110#txt' table='[Clipboard_20241224T214110#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
            <column datatype='string' name='Unable' ordinal='0' />
            <column datatype='string' name='to' ordinal='1' />
            <column datatype='string' name='complete' ordinal='2' />
            <column datatype='string' name='action' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
            <column datatype='string' name='F9' ordinal='8' />
            <column datatype='string' name='F10' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot; &quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unable</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unable]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>Unable</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>to</remote-name>
            <remote-type>129</remote-type>
            <local-name>[to]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>to</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complete</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complete]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>complete</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>action</remote-name>
            <remote-type>129</remote-type>
            <local-name>[action]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>action</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[Clipboard_20241224T214110#txt]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Clipboard_20241224T214110]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Clipboard_20241224T214110' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20241224T214110]' role='measure' type='quantitative' />
      <column caption='Action' datatype='string' name='[action]' role='dimension' type='nominal' />
      <column caption='Complete' datatype='string' name='[complete]' role='dimension' type='nominal' />
      <column caption='To' datatype='string' name='[to]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Clipboard_20241224T214110' id='Clipboard_20241224T214110'>
            <properties context=''>
              <relation connection='Clipboard_20241224T214110leaf' name='Clipboard_20241224T214110#txt' table='[Clipboard_20241224T214110#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=' '>
                  <column datatype='string' name='Unable' ordinal='0' />
                  <column datatype='string' name='to' ordinal='1' />
                  <column datatype='string' name='complete' ordinal='2' />
                  <column datatype='string' name='action' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                  <column datatype='string' name='F8' ordinal='7' />
                  <column datatype='string' name='F9' ordinal='8' />
                  <column datatype='string' name='F10' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Profits in USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
          </datasources>
          <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[cnt:Quantity:qk]' included-values='in-range'>
            <min>1</min>
            <max>2001</max>
          </filter>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</column>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[cnt:Quantity:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Profit:qk]' />
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Quantity:qk]' />
              <color column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C6A19382-4EDA-49D4-B470-2886F23AE03A}' />
    </worksheet>
    <worksheet name='Sales Trend in USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
          </datasources>
          <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' included-values='in-range'>
            <min>40000.0</min>
          </filter>
          <slices>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</column>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' />
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' />
              <lod column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]</rows>
        <cols>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{B294310D-28E3-4048-BDA7-A95CCA2AC95A}' />
    </worksheet>
    <worksheet name='Sales in United State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</column>
            <column>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' />
              <lod column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
              <color column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' />
              <geometry column='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk] * [federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[Latitude (generated)])</rows>
        <cols>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{731C9924-4EE0-4941-A4A3-6AAF875D5895}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20241224T214047' />
          </datasources>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{20351478-4518-4F96-A689-C0539B4178D7}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20241224T214110' />
          </datasources>
          <datasource-dependencies datasource='Clipboard_20241224T214110'>
            <column datatype='string' name='[F10]' role='dimension' type='nominal' />
            <column datatype='string' name='[F5]' role='dimension' type='nominal' />
            <column datatype='string' name='[F6]' role='dimension' type='nominal' />
            <column datatype='string' name='[F7]' role='dimension' type='nominal' />
            <column datatype='string' name='[F8]' role='dimension' type='nominal' />
            <column datatype='string' name='[F9]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unable]' role='dimension' type='nominal' />
            <column caption='Action' datatype='string' name='[action]' role='dimension' type='nominal' />
            <column caption='Complete' datatype='string' name='[complete]' role='dimension' type='nominal' />
            <column-instance column='[F10]' derivation='None' name='[none:F10:nk]' pivot='key' type='nominal' />
            <column-instance column='[F5]' derivation='None' name='[none:F5:nk]' pivot='key' type='nominal' />
            <column-instance column='[F6]' derivation='None' name='[none:F6:nk]' pivot='key' type='nominal' />
            <column-instance column='[F7]' derivation='None' name='[none:F7:nk]' pivot='key' type='nominal' />
            <column-instance column='[F8]' derivation='None' name='[none:F8:nk]' pivot='key' type='nominal' />
            <column-instance column='[F9]' derivation='None' name='[none:F9:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unable]' derivation='None' name='[none:Unable:nk]' pivot='key' type='nominal' />
            <column-instance column='[action]' derivation='None' name='[none:action:nk]' pivot='key' type='nominal' />
            <column-instance column='[complete]' derivation='None' name='[none:complete:nk]' pivot='key' type='nominal' />
            <column-instance column='[to]' derivation='None' name='[none:to:nk]' pivot='key' type='nominal' />
            <column caption='To' datatype='string' name='[to]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([Clipboard_20241224T214110].[none:Unable:nk] / ([Clipboard_20241224T214110].[none:to:nk] / ([Clipboard_20241224T214110].[none:complete:nk] / ([Clipboard_20241224T214110].[none:action:nk] / ([Clipboard_20241224T214110].[none:F5:nk] / ([Clipboard_20241224T214110].[none:F6:nk] / ([Clipboard_20241224T214110].[none:F7:nk] / ([Clipboard_20241224T214110].[none:F8:nk] / ([Clipboard_20241224T214110].[none:F9:nk] / [Clipboard_20241224T214110].[none:F10:nk])))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{EC646064-7453-49BF-8C33-2F50550BFFA1}' />
    </worksheet>
    <worksheet name='d'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EDE8E502-1549-4D41-9965-363873428C82}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Sales and Profits in the USA'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders (Excel File)' name='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g' />
      </datasources>
      <datasource-dependencies datasource='federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48899' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='48899' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='48899' id='3' name='Sales in United State' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='48899' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='13591' id='8' name='Sales in United State' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13591' id='9' name='Sales in United State' pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type-v2='color' w='16000' x='83200' y='14591'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13591' id='11' name='Profits in USA' pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type-v2='color' w='16000' x='83200' y='28182'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8126' id='13' name='Sales Trend in USA' pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='41773'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49101' id='10' name='Profits in USA' w='49200' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49101' id='12' name='Sales Trend in USA' w='49200' x='50000' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='18' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='13591' id='8' mode='checkdropdown' name='Sales in United State' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48899' id='3' is-fixed='true' name='Sales in United State' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13591' id='9' name='Sales in United State' pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type-v2='color' w='16000' x='83200' y='14591'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49101' id='10' is-fixed='true' name='Profits in USA' w='49200' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13591' id='11' name='Profits in USA' pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type-v2='color' w='16000' x='83200' y='28182'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49101' id='12' is-fixed='true' name='Sales Trend in USA' w='49200' x='50000' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8126' id='13' name='Sales Trend in USA' pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' type-v2='color' w='16000' x='83200' y='41773'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F5EB68DB-FEFE-4B36-A814-687BCBF4A906}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Sales in United State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{909A45E2-A502-482D-AD27-7F92C178F30E}' />
    </window>
    <window class='worksheet' name='Profits in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{466243EF-BCEF-44B1-B274-E9D7014F1DB4}' />
    </window>
    <window class='worksheet' name='Sales Trend in USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Category:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Country:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:Order Date:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[sum:Sales:qk]</field>
            <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C384C5BF-F9B3-4318-8840-910CB8792138}' />
    </window>
    <window class='worksheet' name='d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{87CD8682-2034-4DD8-9BD7-FE64FA70EACE}' />
    </window>
    <window class='dashboard' maximized='true' name='Sales and Profits in the USA'>
      <viewpoints>
        <viewpoint name='Profits in USA'>
          <highlight>
            <color-one-way>
              <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales Trend in USA'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales in United State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0mhs0cp0ucg5qu11i0hsw0uz9t5g].[none:State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{23B0850B-4FB3-442D-BC98-A2BBD108E7A8}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9EFA63D8-B048-42AC-8406-E70472615D09}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{90EF8AF4-FDEA-40BC-93DE-4740507B81DD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Profits in USA' width='192'>
      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
      2s2vm6AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Trend in USA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales and Profits in the USA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales in United State' width='192'>
      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
      f/mMYX0DJAmPKdiJDvcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='d' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
